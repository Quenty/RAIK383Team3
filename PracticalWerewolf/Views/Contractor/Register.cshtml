@using PracticalWerewolf.ViewModels.Contractor
@model ContractorRegisterModel
@{
    ViewBag.Title = "Apply as a contractor";
}

<h2>Apply</h2>

@using (Html.BeginForm("Contractor", "Register", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Apply as a contractor</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.DriversLicenseId, htmlAttributes: new { @class = "control-label col-md-2", placeholder = "Drivers license" })
            
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.DriversLicenseId, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DriversLicenseId, "", new { @class = "text-danger" })
        </div>
            
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StreetAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input id="autocomplete" placeholder="Street address" onFocus="geolocate()" type="text" class="form-control"/>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.City, new { id = "locality", disabled = "disabled", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.State, new { id = "administrative_area_level_1", disabled = "disabled", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ZipCode, new { id = "postal_code", disabled = "disabled", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Country, new { id = "country", disabled = "disabled", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(m => m.TermsOfService)
                @Html.LabelFor(m => m.TermsOfService)
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/mapautocomplete")
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCZ7pBFhPlZvw9Hm2CDAL7gFoI7s5WsPpc&libraries=places&callback=initAutocomplete" async defer></script>
}
