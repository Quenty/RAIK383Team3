@model PracticalWerewolf.ViewModels.Contractor.OrderRouteViewModel

@{
    ViewBag.Title = "Route";
}

    <h2>@Html.DisplayFor(model => model.DisplayName)</h2>
    <hr />


@if (Model.Route != null && Model.Route.Count() > 0)
{
    <h3>
        You have @Html.DisplayFor(model => model.Route.FirstOrDefault().DistanceToNextStop) miles until your next stop 
    </h3>
    <br />

    <table class="table table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Route.FirstOrDefault().Order.RequestInfo.Size.Mass)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Route.FirstOrDefault().Order.RequestInfo.Size.Volume)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Route.FirstOrDefault().Type)
                </th>
                <th>
                    Address
                </th>
                <th>

                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Route)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(x => item.Order.RequestInfo.Size.Mass)
                    </td>
                    <td>
                        @Html.DisplayFor(x => item.Order.RequestInfo.Size.Volume)
                    </td>
                    <td>
                        @Html.DisplayFor(x => item.Type)
                    </td>
                    <td>
                        @if (item.Type == PracticalWerewolf.Models.Routes.StopType.DropOff)
                        {
                            @Html.DisplayFor(x => item.Order.RequestInfo.DropOffAddress.RawInputAddress )
                        }
                        else
                        {
                            @Html.DisplayFor(x => item.Order.RequestInfo.PickUpAddress.RawInputAddress )
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Details", "Order", "Order", new { id = item.Order.OrderGuid }, null)
                    </td>
                </tr>
            }
        </tbody>
    </table>

}
else
{
    <h4>
        You don't have any orders!
    </h4>
    <p>
        If you want to be considered for incoming orders, please update your status. You must be listed as available to be assigned an order.
    </p>
}
