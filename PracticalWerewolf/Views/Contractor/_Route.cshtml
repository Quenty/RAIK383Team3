@model PracticalWerewolf.ViewModels.Contractor.OrderRouteViewModel

@{
    ViewBag.Title = "Route";
}

    <h2>@Html.DisplayFor(model => model.DisplayName)</h2>
    <hr />


@if (Model.Route != null && Model.Route.Count() > 0)
{
    if (Model.DistanceToNextStop != null)
    {
        <h3>
            From your previous route stop, you have @Html.DisplayFor(model => model.DistanceToNextStop) until you reach your next destination.
        </h3>
        <br />
    }

    <table class="table table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Route.FirstOrDefault().Order.RequestInfo.Size.Mass)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Route.FirstOrDefault().Order.RequestInfo.Size.Volume)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Route.FirstOrDefault().Type)
                </th>
                <th>
                    Address
                </th>
                <th>
                    Customer Confirmation
                </th>
                <th>

                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Route)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(x => item.Order.RequestInfo.Size.Mass)
                    </td>
                    <td>
                        @Html.DisplayFor(x => item.Order.RequestInfo.Size.Volume)
                    </td>
                    <td>
                        @Html.DisplayFor(x => item.Type)
                    </td>
                    <td>
                        @if (item.Type == PracticalWerewolf.Models.Routes.StopType.DropOff)
                        {
                            <a target="_blank" href="http://google.com/maps?saddr=My+Address&daddr=@item.Order.RequestInfo.DropOffAddress.RawInputAddress">
                                @Html.DisplayFor(x => item.Order.RequestInfo.DropOffAddress.RawInputAddress)
                            </a>
                        }
                        else
                        {
                            <a target ="_blank" href="http://google.com/maps?saddr=My+Address&daddr=@item.Order.RequestInfo.PickUpAddress.RawInputAddress">
                                @Html.DisplayFor(x => item.Order.RequestInfo.PickUpAddress.RawInputAddress)
                            </a>

                        }
</td>
                    <td>
                        @Html.ActionLink("Confirm", "Confirmation", new { id = item.RouteStopGuid}, new { @class = "btn btn-info" })
                    </td>
                    <td>
                        @Html.ActionLink("Details", "Order", "Order", new { id = item.Order.OrderGuid }, null)
                    </td>
                </tr>
            }
        </tbody>
    </table>

}
else
{
    <h4>
        You don't have any orders!
    </h4>
    <p>
        If you want to be considered for incoming orders, please update your status. You must be listed as available to be assigned an order.
    </p>
}
